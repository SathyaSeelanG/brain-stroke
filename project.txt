# Brain Stroke Prediction System

## Project Overview
This project implements a comprehensive machine learning system for predicting brain stroke risk using multiple models and providing an interactive dashboard for healthcare professionals.

## Key Components

### 1. Models
- Random Forest (Best Performing - 98.7% accuracy)
- Gradient Boosting (97.9% accuracy)
- Neural Network (96.8% accuracy)
- Logistic Regression (95.4% accuracy)
- K-Nearest Neighbors (94.2% accuracy)

### 2. Features Used
Primary Features:
- Age
- Gender
- Hypertension
- Heart Disease
- Ever Married
- Work Type
- Residence Type
- Average Glucose Level
- BMI
- Smoking Status

Additional Features:
- Blood Pressure
- Cholesterol Levels
- Physical Activity
- Family History
- Stress Levels

### 3. System Components
1 Analytics Dashboard (dashboard.py)
   - Interactive data visualization
   - Model performance comparison
   - Feature importance analysis
   - Patient records management

2. Model Training (train_and_evaluate_models.py)
   - Data preprocessing
   - Model training and evaluation
   - Performance metrics calculation
   - Model persistence

### 3. Performance Metrics
Best Model (Random Forest):
- Accuracy: 98.7%
- Precision: 97.9%
- Recall: 98.2%
- F1-Score: 98.0%
- AUC-ROC: 0.989

### 4. Data Processing Pipeline
1. Data Cleaning
   - Handle missing values
   - Remove duplicates
   - Normalize numerical features
   - Encode categorical variables

2. Feature Engineering
   - BMI calculation
   - Age grouping
   - Risk factor combination
   - Medical history scoring

3. Model Training
   - Cross-validation
   - Hyperparameter tuning
   - Ensemble methods
   - Performance validation

### 5. Deployment Instructions
1. Install Requirements:
   ```bash
   pip install -r requirements.txt
   ```

2. Train Models:
   ```bash
   python train_and_evaluate_models.py
   ```

3. Run Dashboard:
   ```bash
   streamlit run dashboard.py
   ```


   ```

### 6. File Structure
```
Brain_Stroke_Prediction/
├── app.py                    # Web interface
├── dashboard.py              # Analytics dashboard
├── train_and_evaluate_models.py  # Model training
├── models/                   # Saved models
├── data/                    # Dataset
├── templates/               # HTML templates
├── static/                  # Static files
├── results/                 # Model results
└── visualizations/          # Generated plots
```

### 7. Best Practices
1. Regular model retraining
2. Data validation before prediction
3. Secure patient data handling
4. Regular performance monitoring
5. Backup of trained models

### 8. Future Improvements
1. Additional model integration
2. Real-time monitoring
3. Mobile application
4. API development
5. Automated reporting



